# PocketBase with Webhooks Dockerfile
FROM golang:1.22-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates

# Set working directory
WORKDIR /app

# Copy Go modules first
COPY go.mod* go.sum* ./

# Copy source code so go mod tidy can detect dependencies
COPY *.go ./

# Let go mod tidy resolve all dependencies from the source files
RUN go mod tidy && go mod download

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o pocketbase-server .

# Final stage
FROM alpine:latest

# Install runtime dependencies
RUN apk add --no-cache ca-certificates

# Set working directory
WORKDIR /pb

# Copy built binary and startup script
COPY --from=builder /app/pocketbase-server /pb/pocketbase-server

# Create directories and make script executable
RUN mkdir -p /pb/pb_data /pb/pb_migrations

# Copy existing data and migrations if they exist (using wildcards to avoid errors if missing)
COPY pb_data* /pb/
COPY pb_migrations* /pb/

# Expose PocketBase port
EXPOSE 8090

# Start PocketBase with webhooks
CMD ["/pb/pocketbase-server", "serve", "--http=0.0.0.0:8090"]
